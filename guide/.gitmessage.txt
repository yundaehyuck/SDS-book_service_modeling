################
# <타입> : <제목> 의 형식으로 제목을 아래 공백줄에 작성
# 제목은 50자 이내 / 변경사항이 "무엇"인지 명확히 작성 / 끝에 마침표 금지
# 예) feat : 로그인 기능 추가

# 바로 아래 공백은 지우지 마세요 (제목과 본문의 분리를 위함)

################
# 본문(구체적인 내용)을 아랫줄에 작성
# 여러 줄의 메시지를 작성할 땐 "-"로 구분 (한 줄은 72자 이내)

################
# 꼬릿말(footer)을 아랫줄에 작성 (현재 커밋과 관련된 이슈 번호 추가 등)
# 예) Close #7
S08P31C201-
################
# feat : 새로운 기능 추가
# fix : 버그 수정
# docs : 문서 수정
# test : 테스트 코드 추가
# refact : 코드 리팩토링
# style : 코드 의미에 영향을 주지 않는 변경사항
# chore : 빌드 부분 혹은 패키지 매니저 수정사항
# !hotfix: 급하게 치명적인 버그를 고쳐야하는 경우
# comment : 필요한 주석 추가 및 변경
# rename : 파일 또는 폴더 명을 수정하거나 옮기는 작업만의 경우
# remove : 파일을 삭제하는 작업만 수행한 경우

################
#
#################
# 커밋 메시지 템플릿 적용방법
# git config --local commit.template .gitmessage.txt
#################
#
#################
# vim 명령어
# i : 입력
# :w  저장
# :q  나가기
# :wq  저장하고 나가기
# :q!  커밋을 취소하고 싶을 때
# !를 끝에 붙이면 강제로 실행
#################
